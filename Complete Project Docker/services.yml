services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    user: root
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    user: root
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8.3.0
    container_name: mysql-8.3.0
    restart: always
    environment:
      MYSQL_USER: test
      MYSQL_ROOT_USER: root
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
    ports:
      - '3306:3306'
    volumes:
      - mysql-db:/var/lib/mysql
    command: --bind-address=0.0.0.0 --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  expensetracker:
    build:
      context: .
      dockerfile: Dockerfile.authservice
    image: auth-service
    container_name: expensetracker
    ports:
      - '9898:9898'
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: authservice
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
    restart: unless-stopped

  user-service:
    build:
      context: .
      dockerfile: Dockerfile.userservice
    image: user-service
    container_name: user-service
    ports:
      - '9810:9810'
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: userservice
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
      expensetracker:
        condition: service_started
    restart: unless-stopped

  service:
    build:
      context: .
      dockerfile: Dockerfile.expenseservice
    image: expense-service
    container_name: service
    ports: 
      - '9820:9820'
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: expenseservice
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
    restart: unless-stopped

  ds-service:
    build:
      context: .
      dockerfile: Dockerfile.dsservice
    image: ds-service
    container_name: ds-service
    ports:
      - '8010:8010'
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      OPENAI_API_KEY: uhL33lPfvF1I32YAJk1bj3sjC29oNjDD
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
      service:
        condition: service_started
      user-service:
        condition: service_started
    restart: unless-stopped
  
  kong-service:
    build:
      context: kong
      dockerfile: Dockerfile
    container_name: kong-gateway
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/usr/local/kong/declarative/kong.yml"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_LOG_LEVEL: "debug"
      KONG_PLUGINS: "bundled,custom-auth"
      KONG_LUA_PACKAGE_PATH: "/usr/local/share/lua/5.1/?.lua;;"
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
    depends_on:
      expensetracker:
        condition: service_started
      user-service:
        condition: service_started
      service:
        condition: service_started
      ds-service:
        condition: service_started
    restart: unless-stopped
      
volumes:
  mysql-db:
    driver: local
